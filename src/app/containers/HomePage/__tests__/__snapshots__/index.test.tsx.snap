// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<renderHomePage /> should render and match the snapshot 1`] = `
<Context.Provider
  value={
    Object {
      "store": Object {
        "createReducer": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "injectedReducers": Object {
          "home": [Function],
        },
        "injectedSagas": Object {
          "home": Object {
            "mode": "@@saga-injector/daemon",
            "saga": [Function],
            "task": Object {
              "@@redux-saga/TASK": true,
              "cancel": [Function],
              "cont": [Function],
              "context": Object {},
              "end": [Function],
              "error": [Function],
              "id": 1,
              "isAborted": [Function],
              "isCancelled": [Function],
              "isRoot": true,
              "isRunning": [Function],
              "joiners": null,
              "meta": Object {
                "location": undefined,
                "name": "mockHomePageSaga",
              },
              "queue": Object {
                "abort": [Function],
                "addTask": [Function],
                "cancelAll": [Function],
                "getTasks": [Function],
              },
              "result": [Function],
              "setContext": [Function],
              "toPromise": [Function],
            },
          },
        },
        "replaceReducer": [Function],
        "runSaga": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "createReducer": [Function],
          "dispatch": [Function],
          "getState": [Function],
          "injectedReducers": Object {
            "home": [Function],
          },
          "injectedSagas": Object {
            "home": Object {
              "mode": "@@saga-injector/daemon",
              "saga": [Function],
              "task": Object {
                "@@redux-saga/TASK": true,
                "cancel": [Function],
                "cont": [Function],
                "context": Object {},
                "end": [Function],
                "error": [Function],
                "id": 1,
                "isAborted": [Function],
                "isCancelled": [Function],
                "isRoot": true,
                "isRunning": [Function],
                "joiners": null,
                "meta": Object {
                  "location": undefined,
                  "name": "mockHomePageSaga",
                },
                "queue": Object {
                  "abort": [Function],
                  "addTask": [Function],
                  "cancelAll": [Function],
                  "getTasks": [Function],
                },
                "result": [Function],
                "setContext": [Function],
                "toPromise": [Function],
              },
            },
          },
          "replaceReducer": [Function],
          "runSaga": [Function],
          "subscribe": [Function],
          Symbol(Symbol.observable): [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <HomePage />
</Context.Provider>
`;
